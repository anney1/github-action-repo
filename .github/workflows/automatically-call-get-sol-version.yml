name: Release action

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches:
      - main  # Trigger automatically when changes are pushed to the main branch

permissions:
  contents: write

jobs:
  Get-Solution-Name-and-Version:
    runs-on: ubuntu-latest
    outputs:
      solution_name: ${{ steps.get-solution-name.outputs.solution_name }}
      solution_version: ${{ steps.generate-version.outputs.solution_version }}

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3

      - name: Extract solution name
        id: get-solution-name
        run: |
          # Example: Extract solution name from a file (e.g., solution.json)
          SOLUTION_NAME=$(jq -r '.name' solutions/solution.json)
          echo "Solution Name: $SOLUTION_NAME"
          echo "solution_name=$SOLUTION_NAME" >> $GITHUB_OUTPUT

      - name: Generate version number
        id: generate-version
        run: |
          # Example: Generate a semantic version (e.g., 1.0.0)
          VERSION=$(date +%Y.%m.%d.%H%M%S)  # Use timestamp as version
          echo "Generated Version: $VERSION"
          echo "solution_version=$VERSION" >> $GITHUB_OUTPUT

  Release-solution:
    needs: Get-Solution-Name-and-Version
    uses: ./.github/workflows/automatically_call-deploy-prod.yml
    with:
      solution_name: ${{ needs.Get-Solution-Name-and-Version.outputs.solution_name }}
      solution_version: ${{ needs.Get-Solution-Name-and-Version.outputs.solution_version }}
      BUILD_ENVIRONMENT_URL: 'https://org5569b62d.crm15.dynamics.com'
      PRODUCTION_ENVIRONMENT_URL: 'https://orgdc49fd0d.crm15.dynamics.com'

    secrets:
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      TENANT_ID: ${{ secrets.TENANT_ID }}
      envSecret: ${{ secrets.ENVSECRET }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
