name: export-and-branch-solution

on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: 'Name of the solution to work on from Power Platform'
        required: true
        default: ALMLab
      solution_exported_folder:
        description: 'Folder name for staging the exported solution *do not change*'
        required: true
        default: out/exported/
      solution_folder:
        description: 'Staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: out/solutions/
      solution_target_folder:
        description: 'Folder name to be created and checked in *do not change*'
        required: true
        default: solutions/

env:
  ENVIRONMENT_URL: 'https://org41c53d90.crm4.dynamics.com'
  CLIENT_ID: 'c37f4956-70a3-4e74-a2d2-225b579d1a21'
  TENANT_ID: '302edaf0-65d6-449a-a796-b83cfb733f0d'

permissions:
  contents: write

jobs:
  export-from-dev:
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1
    steps:
    - uses: actions/checkout@v3  # Use the latest version of checkout action
      with:
        lfs: true

    - name: Install Power Platform CLI
      shell: pwsh
      run: |
        Install-Module -Name Microsoft.PowerPlatform.Cds.Client -Force -AllowClobber
        Import-Module Microsoft.PowerPlatform.Cds.Client

    # - name: who-am-i action
    #   uses: microsoft/powerplatform-actions/who-am-i@v1  # Use latest available version
    #   with:
    #     environment-url: ${{env.ENVIRONMENT_URL}}
    #     app-id: ${{env.CLIENT_ID}}
    #     client-secret: ${{ secrets.PowerPlatformSPN }}
    #     tenant-id: ${{env.TENANT_ID}}

    - name: export-solution action
      uses: microsoft/powerplatform-actions/export-solution@v1  # Use latest available version
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}
        solution-name: ${{ github.event.inputs.solution_name }}
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip

    - name: unpack-solution action
      uses: microsoft/powerplatform-actions/unpack-solution@v1  # Use latest available version
      with:
        solution-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-type: 'Unmanaged'
        overwrite-files: true

    - name: branch-solution, prepare it for a PullRequest
      uses: microsoft/powerplatform-actions/branch-solution@v1  # Use latest available version
      with:
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-target-folder: ${{ github.event.inputs.solution_target_folder}}/${{ github.event.inputs.solution_name }}
        repo-token: ${{ secrets.GH_TOKEN }}
        allow-empty-commit: true
